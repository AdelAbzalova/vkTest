{"ast":null,"code":"var _jsxFileName = \"/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx\";\nimport { Card, Space, Avatar } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\n\n// const GroupCard:FC = (props) => {\n//     console.log(props)\n//     return (\n//         <div>\n//             <Card avatar=''></Card>\n//             {/* {props} */}\n//         </div>\n//     )\n\n// }\n\nconst GroupCard = props => {\n  console.log(props.name);\n  const color = props.avatar_color || '';\n  let subscribes = 'подписчиков';\n  switch (props.members_count % 10) {\n    case 1:\n      subscribes = 'подписчик';\n      break;\n    case 2 || 3 || 4:\n      subscribes = 'подписчика';\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(Space, {\n    direction: \"vertical\",\n    size: 16,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: \"lightgrey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: color,\n            width: 100,\n            height: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this),\n        title: props.name,\n        description: (props.closed ? 'Закрытая' : 'Открытая') + ' группа'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.members_count, \"  \", subscribes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = GroupCard;\nexport default GroupCard;\nvar _c;\n$RefreshReg$(_c, \"GroupCard\");","map":{"version":3,"names":["Card","Space","Avatar","jsxDEV","_jsxDEV","Meta","GroupCard","props","console","log","name","color","avatar_color","subscribes","members_count","direction","size","children","style","backgroundColor","avatar","width","height","fileName","_jsxFileName","lineNumber","columnNumber","title","description","closed","_c","$RefreshReg$"],"sources":["/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx"],"sourcesContent":["import { FC } from \"react\"\nimport { Card, Space, Avatar } from \"antd\"\nconst { Meta } = Card;\n\n// const GroupCard:FC = (props) => {\n//     console.log(props)\n//     return (\n//         <div>\n//             <Card avatar=''></Card>\n//             {/* {props} */}\n//         </div>\n//     )\n\n// }\n  interface GroupProps {\n    \"id\": number,\n    \"name\": string,\n    \"closed\": boolean,\n    \"avatar_color\"?: string,\n    \"members_count\": number,\n    \"friends\"?: User[]\n  }\n    interface User {\n    \"first_name\": string,\n    \"last_name\": string\n  }\n\nconst GroupCard: React.FC<GroupProps> = (props) => {\n\n  console.log(props.name);\n  const color=props.avatar_color || '';\n  let subscribes='подписчиков'\n  switch(props.members_count%10){\n    case 1: \n        subscribes='подписчик';\n    break;\n    case 2 || 3 || 4:\n        subscribes='подписчика'\n    break\n  }\n\nreturn (\n    \n    <Space direction=\"vertical\" size={16}>\n      <Card style={{backgroundColor:\"lightgrey\"}} >\n      {/* extra={<a href=\"#\">More</a>} style={{ width: 300 }} > */}\n      <Meta\n          avatar={<Avatar style={{ backgroundColor:color, width:100, height:100 }}/>}\n          title={props.name}\n          description={(props.closed ? 'Закрытая': 'Открытая') + ' группа'} \n        />\n        <p>{props.members_count }  {subscribes}</p>\n         {/* <p>{props.name}</p>  */}\n      </Card>\n    </Space>\n  );\n    }\n  \n\nexport default GroupCard;"],"mappings":";AACA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAM;EAAEC;AAAK,CAAC,GAAGL,IAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAcA,MAAMM,SAA+B,GAAIC,KAAK,IAAK;EAEjDC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,IAAI,CAAC;EACvB,MAAMC,KAAK,GAACJ,KAAK,CAACK,YAAY,IAAI,EAAE;EACpC,IAAIC,UAAU,GAAC,aAAa;EAC5B,QAAON,KAAK,CAACO,aAAa,GAAC,EAAE;IAC3B,KAAK,CAAC;MACFD,UAAU,GAAC,WAAW;MAC1B;IACA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MACZA,UAAU,GAAC,YAAY;MAC3B;EACF;EAEF,oBAEIT,OAAA,CAACH,KAAK;IAACc,SAAS,EAAC,UAAU;IAACC,IAAI,EAAE,EAAG;IAAAC,QAAA,eACnCb,OAAA,CAACJ,IAAI;MAACkB,KAAK,EAAE;QAACC,eAAe,EAAC;MAAW,CAAE;MAAAF,QAAA,gBAE3Cb,OAAA,CAACC,IAAI;QACDe,MAAM,eAAEhB,OAAA,CAACF,MAAM;UAACgB,KAAK,EAAE;YAAEC,eAAe,EAACR,KAAK;YAAEU,KAAK,EAAC,GAAG;YAAEC,MAAM,EAAC;UAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAE;QAC3EC,KAAK,EAAEpB,KAAK,CAACG,IAAK;QAClBkB,WAAW,EAAE,CAACrB,KAAK,CAACsB,MAAM,GAAG,UAAU,GAAE,UAAU,IAAI;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eACFtB,OAAA;QAAAa,QAAA,GAAIV,KAAK,CAACO,aAAa,EAAE,IAAE,EAACD,UAAU;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAI,EAAA,GA7BCxB,SAA+B;AAgCrC,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}