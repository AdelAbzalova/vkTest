{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchGroups = createAsyncThunk('groups/fetchGroups', async function (_, {\n  rejectWithValue,\n  getState\n}) {\n  // const games=getState().games;\n\n  // const isCategory =games.genre ? `&category=${games.genre}` : \"\";\n  // const isPlatform = games.platform ? `${games.platform}` : \"all\";\n  // const isSort = games.sort ? `&sort-by=${games.sort}` : \"\";\n\n  const response = await fetch('../../groups.json');\n  if (!response.ok) {\n    return rejectWithValue('server error');\n  }\n  const data = await response.json();\n  console.log('data', data);\n  return data;\n});\n\n// export const fetchGame = createAsyncThunk(\n//     'game/fetchGame', \n//     async function(id, {rejectWithValue}){\n//             const response= await fetch(`https://free-to-play-games-database.p.rapidapi.com/api/game?id=${id}`, {\n//                     // method: \"GET\",\n//                     // headers: {\n\n//                     //     \"X-RapidAPI-Key\": \"2db4ae875cmshc804e07e556fbf9p1241acjsn750ba9cc2e97\",\n//                     //     \"X-RapidAPI-Host\": \"free-to-play-games-database.p.rapidapi.com\",\n//                     // },\n//             });\n\n//             if(!response.ok){\n//                return rejectWithValue('server error')\n//             }\n//             const data= await response.json();\n//             return data;\n\n//     }\n//   )\n\nconst groupSlice = createSlice({\n  name: \"groups\",\n  initialState: {\n    // list: [],\n    // platform:null, \n    // sort:null,\n    // genre:null, \n    // loading:false , \n    // error:null,\n    // gameInfo:{},\n    groups: {}\n  },\n  reducers: {\n    // changeLoading(state, action){\n    //     state.loading=action.payload;\n    // }, \n    // changeGenre(state, action){\n    //     state.genre=action.payload\n    // }, \n    // changeSort(state, action){\n    //     state.sort=action.payload\n    // },\n    // changePlatform(state, action){\n    //     state.platform=action.payload\n    // }, \n    // clearFilters(state){\n    //     state.platform=null;\n    //     state.genre=null;\n    //     state.sort=null;\n    // },\n  }\n  //   extraReducers:{\n  //     [ fetchTodos.pending]:(state )=>{\n  //         // state.status='loading';\n  //         // state.error=null;\n  //     },\n  //     [ fetchTodos.fulfilled]:(state, action)=>{\n  //         // state.status='resolved';\n  //         // state.todos=action.payload; \n  //     },\n  //     [ fetchTodos.rejected]:setError,\n  //     [deleteTodo.rejected]: setError, \n  //     [toggleStatus.rejected]:setError, \n  //         },\n  //   extraReducers:(builder)=>{\n  //     builder \n  //             .addCase(fetchGroups.pending, (state)=>{\n  //               state.loading=true;\n  //               state.error=null;\n  //             })\n  //             .addCase(fetchGroups.fulfilled, (state, action)=>{\n  //               state.list=action.payload;\n  //               state.loading=false;\n  //             })\n  //             .addCase(fetchGroups.pending, (state)=>{\n  //                 state.loading=true;\n  //                 state.error=null;\n  //               })\n  //               .addCase(fetchGroups.fulfilled, (state, action)=>{\n  //                 state.gameInfo=action.payload;\n  //                 state.loading=false;\n  //               })\n  //               .addMatcher(isError, (state )=>{\n  //                 state.error=true;\n  //                 state.loading= false;\n  //               })\n  //   }\n});\n// function isError(action){\n\n//     return action.type.endsWith('rejected')\n//   }\n\nexport default groupSlice.reducer;\nexport const {\n  // changePlatform, \n  // changeGenre, \n  // changeSort, \n  // changeLoading, \n  // clearFilters, \n} = groupSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchGroups","_","rejectWithValue","getState","response","fetch","ok","data","json","console","log","groupSlice","name","initialState","groups","reducers","reducer","actions"],"sources":["/Users/adel/Desktop/work/react/vk/vk_test2/src/store/groupSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n\nexport const fetchGroups = createAsyncThunk(\n    'groups/fetchGroups', \n    async function(_, {rejectWithValue, getState}){\n        // const games=getState().games;\n\n        // const isCategory =games.genre ? `&category=${games.genre}` : \"\";\n        // const isPlatform = games.platform ? `${games.platform}` : \"all\";\n        // const isSort = games.sort ? `&sort-by=${games.sort}` : \"\";\n\n  \n            const response= await fetch('../../groups.json');\n            if(!response.ok){\n               return rejectWithValue('server error')\n            }\n            const data= await response.json();\n            console.log('data', data)\n            return data;\n  \n    }\n  )\n\n// export const fetchGame = createAsyncThunk(\n//     'game/fetchGame', \n//     async function(id, {rejectWithValue}){\n//             const response= await fetch(`https://free-to-play-games-database.p.rapidapi.com/api/game?id=${id}`, {\n//                     // method: \"GET\",\n//                     // headers: {\n\n//                     //     \"X-RapidAPI-Key\": \"2db4ae875cmshc804e07e556fbf9p1241acjsn750ba9cc2e97\",\n//                     //     \"X-RapidAPI-Host\": \"free-to-play-games-database.p.rapidapi.com\",\n//                     // },\n//             });\n\n//             if(!response.ok){\n//                return rejectWithValue('server error')\n//             }\n//             const data= await response.json();\n//             return data;\n  \n//     }\n//   )\n\nconst groupSlice = createSlice({\n  name: \"groups\",\n  initialState: {\n    // list: [],\n    // platform:null, \n    // sort:null,\n    // genre:null, \n    // loading:false , \n    // error:null,\n    // gameInfo:{},\n    groups:{}\n  },\n  reducers: {\n    // changeLoading(state, action){\n    //     state.loading=action.payload;\n    // }, \n    // changeGenre(state, action){\n    //     state.genre=action.payload\n    // }, \n    // changeSort(state, action){\n    //     state.sort=action.payload\n    // },\n    // changePlatform(state, action){\n    //     state.platform=action.payload\n    // }, \n    // clearFilters(state){\n    //     state.platform=null;\n    //     state.genre=null;\n    //     state.sort=null;\n    // },\n\n  },\n//   extraReducers:{\n//     [ fetchTodos.pending]:(state )=>{\n//         // state.status='loading';\n//         // state.error=null;\n//     },\n//     [ fetchTodos.fulfilled]:(state, action)=>{\n//         // state.status='resolved';\n//         // state.todos=action.payload; \n//     },\n//     [ fetchTodos.rejected]:setError,\n//     [deleteTodo.rejected]: setError, \n//     [toggleStatus.rejected]:setError, \n//         },\n//   extraReducers:(builder)=>{\n//     builder \n//             .addCase(fetchGroups.pending, (state)=>{\n//               state.loading=true;\n//               state.error=null;\n//             })\n//             .addCase(fetchGroups.fulfilled, (state, action)=>{\n//               state.list=action.payload;\n//               state.loading=false;\n//             })\n//             .addCase(fetchGroups.pending, (state)=>{\n//                 state.loading=true;\n//                 state.error=null;\n//               })\n//               .addCase(fetchGroups.fulfilled, (state, action)=>{\n//                 state.gameInfo=action.payload;\n//                 state.loading=false;\n//               })\n//               .addMatcher(isError, (state )=>{\n//                 state.error=true;\n//                 state.loading= false;\n//               })\n//   }\n});\n// function isError(action){\n\n//     return action.type.endsWith('rejected')\n//   }\n\nexport default groupSlice.reducer;\nexport const {\n// changePlatform, \n// changeGenre, \n// changeSort, \n// changeLoading, \n// clearFilters, \n} = groupSlice.actions;\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAGhE,OAAO,MAAMC,WAAW,GAAGD,gBAAgB,CACvC,oBAAoB,EACpB,gBAAeE,CAAC,EAAE;EAACC,eAAe;EAAEC;AAAQ,CAAC,EAAC;EAC1C;;EAEA;EACA;EACA;;EAGI,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,mBAAmB,CAAC;EAChD,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACb,OAAOJ,eAAe,CAAC,cAAc,CAAC;EACzC;EACA,MAAMK,IAAI,GAAE,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACjCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC;EACzB,OAAOA,IAAI;AAEnB,CACF,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMI,UAAU,GAAGb,WAAW,CAAC;EAC7Bc,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,MAAM,EAAC,CAAC;EACV,CAAC;EACDC,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC,CAAC;AACF;;AAEA;AACA;;AAEA,eAAeJ,UAAU,CAACK,OAAO;AACjC,OAAO,MAAM;EACb;EACA;EACA;EACA;EACA;AAAA,CACC,GAAGL,UAAU,CAACM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}