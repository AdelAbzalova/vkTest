{"ast":null,"code":"var _jsxFileName = \"/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupList.jsx\",\n  _s = $RefreshSig$();\nimport { FC } from \"react\";\nimport { fetchGroups } from \"../store/groupSlice\";\nimport { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../hooks';\nimport GroupCard from \"./GroupCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupList = () => {\n  _s();\n  // const dispatch = useAppDispatch();\n  const {\n    groups,\n    status,\n    error,\n    privacyFilter,\n    avatarFilter,\n    friendsFilter\n  } = useAppSelector(state => state.groups);\n  console.log('groups', groups);\n  // useEffect(()=>{\n  //    groups=dispatch(fetchGroups());\n  //   console.log('effect');\n\n  //     }, [dispatch]);\n  const filteredGroups = groups.filter(group => {\n    var _group$friends;\n    if (privacyFilter !== null && group.closed !== privacyFilter) {\n      return false; // Если параметр 1 не соответствует фильтру, исключаем элемент\n    }\n    if (avatarFilter && group.avatar_color !== avatarFilter) {\n      return false; // Если параметр 2 не соответствует фильтру, исключаем элемент\n    }\n    if (friendsFilter !== null && group.friends && ((_group$friends = group.friends) === null || _group$friends === void 0 ? void 0 : _group$friends.length) < friendsFilter) {\n      console.log(group.friends.length);\n      return false; // Если параметр 2 не соответствует фильтру, исключаем элемент\n    }\n    // Если элемент проходит все фильтры, оставляем его\n    return true;\n  });\n  console.log('fultered', filteredGroups);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredGroups.map(group =>\n    /*#__PURE__*/\n    // console.log(group);\n    _jsxDEV(GroupCard, {\n      ...group\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupList, \"nxbFVw0cfoEco+EA5WSXrPM6vZk=\", false, function () {\n  return [useAppSelector];\n});\n_c = GroupList;\nexport default GroupList;\nvar _c;\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"names":["FC","fetchGroups","useEffect","useAppDispatch","useAppSelector","GroupCard","jsxDEV","_jsxDEV","GroupList","_s","groups","status","error","privacyFilter","avatarFilter","friendsFilter","state","console","log","filteredGroups","filter","group","_group$friends","closed","avatar_color","friends","length","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupList.jsx"],"sourcesContent":["import { FC } from \"react\"\nimport { fetchGroups } from \"../store/groupSlice\";\nimport { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector} from '../hooks'\nimport GroupCard from \"./GroupCard\";\n\n\n\nconst GroupList = () => {\n    // const dispatch = useAppDispatch();\n    const {groups, status, error, privacyFilter, avatarFilter, friendsFilter} = useAppSelector(state=> state.groups);\n    console.log('groups',groups)\n    // useEffect(()=>{\n    //    groups=dispatch(fetchGroups());\n    //   console.log('effect');\n\n    //     }, [dispatch]);\n    const filteredGroups = groups.filter(group => {\n        if (privacyFilter!==null && group.closed !== privacyFilter) {\n          return false; // Если параметр 1 не соответствует фильтру, исключаем элемент\n        }\n        if (avatarFilter && group.avatar_color !== avatarFilter) {\n          return false; // Если параметр 2 не соответствует фильтру, исключаем элемент\n        }\n        if (friendsFilter!==null && group.friends &&  group.friends?.length < friendsFilter) {\n            console.log(group.friends.length)\n            return false; // Если параметр 2 не соответствует фильтру, исключаем элемент\n          }\n        // Если элемент проходит все фильтры, оставляем его\n        return true;\n      });\n    console.log('fultered', filteredGroups)\n        \n    return (\n        <div>\n        {filteredGroups.map((group) => \n            // console.log(group);\n        <GroupCard  key={group.id} {...group}/>\n        )}\n        {/* {status + error} */}\n        </div>\n    )\n\n}\n\nexport default GroupList;"],"mappings":";;AAAA,SAASA,EAAE,QAAQ,OAAO;AAC1B,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,EAAEC,cAAc,QAAO,UAAU;AACxD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM;IAACC,MAAM;IAAEC,MAAM;IAAEC,KAAK;IAAEC,aAAa;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGX,cAAc,CAACY,KAAK,IAAGA,KAAK,CAACN,MAAM,CAAC;EAChHO,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACR,MAAM,CAAC;EAC5B;EACA;EACA;;EAEA;EACA,MAAMS,cAAc,GAAGT,MAAM,CAACU,MAAM,CAACC,KAAK,IAAI;IAAA,IAAAC,cAAA;IAC1C,IAAIT,aAAa,KAAG,IAAI,IAAIQ,KAAK,CAACE,MAAM,KAAKV,aAAa,EAAE;MAC1D,OAAO,KAAK,CAAC,CAAC;IAChB;IACA,IAAIC,YAAY,IAAIO,KAAK,CAACG,YAAY,KAAKV,YAAY,EAAE;MACvD,OAAO,KAAK,CAAC,CAAC;IAChB;IACA,IAAIC,aAAa,KAAG,IAAI,IAAIM,KAAK,CAACI,OAAO,IAAK,EAAAH,cAAA,GAAAD,KAAK,CAACI,OAAO,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,MAAM,IAAGX,aAAa,EAAE;MACjFE,OAAO,CAACC,GAAG,CAACG,KAAK,CAACI,OAAO,CAACC,MAAM,CAAC;MACjC,OAAO,KAAK,CAAC,CAAC;IAChB;IACF;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EACJT,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,cAAc,CAAC;EAEvC,oBACIZ,OAAA;IAAAoB,QAAA,EACCR,cAAc,CAACS,GAAG,CAAEP,KAAK;IAAA;IACtB;IACJd,OAAA,CAACF,SAAS;MAAA,GAAqBgB;IAAK,GAAnBA,KAAK,CAACQ,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEI,CAAC;AAGd,CAAC;AAAAxB,EAAA,CAnCKD,SAAS;EAAA,QAEiEJ,cAAc;AAAA;AAAA8B,EAAA,GAFxF1B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}