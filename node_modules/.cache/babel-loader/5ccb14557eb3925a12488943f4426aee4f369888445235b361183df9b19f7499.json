{"ast":null,"code":"var _jsxFileName = \"/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Friend from \"./Friend\";\nimport { Card, Avatar, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst GroupCard = props => {\n  _s();\n  var _props$friends;\n  const [isOpen, setIsOpen] = useState(false);\n  const color = props.avatar_color || '#f7f8fa';\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      backgroundColor: \"#f7f8fa\",\n      width: \"65%\",\n      marginTop: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        style: {\n          backgroundColor: color,\n          width: 100,\n          height: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }, this),\n      title: props.name,\n      description: (props.closed ? 'Закрытая' : 'Открытая') + ' группа'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.members_count, \"  \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0447\\u0438\\u043A\\u043E\\u0432\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), props.friends && /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => setIsOpen(prev => !prev),\n      children: [\" \", (_props$friends = props.friends) === null || _props$friends === void 0 ? void 0 : _props$friends.length, \" \\u0434\\u0440\\u0443\\u0437\\u0435\\u0439\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: isOpen && props.friends && props.friends.map((friend, index) => /*#__PURE__*/_jsxDEV(Friend, {\n        ...friend\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 89\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this);\n};\n_s(GroupCard, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = GroupCard;\nexport default GroupCard;\nvar _c;\n$RefreshReg$(_c, \"GroupCard\");","map":{"version":3,"names":["useState","Friend","Card","Avatar","Button","jsxDEV","_jsxDEV","Meta","GroupCard","props","_s","_props$friends","isOpen","setIsOpen","color","avatar_color","style","backgroundColor","width","marginTop","children","avatar","height","fileName","_jsxFileName","lineNumber","columnNumber","title","name","description","closed","members_count","friends","type","onClick","prev","length","map","friend","index","_c","$RefreshReg$"],"sources":["/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\nimport Friend from \"./Friend\";\nimport { Group } from \"../models/models\";\nimport { Card, Avatar, Button } from \"antd\";\nconst { Meta } = Card;\n\nconst GroupCard: FC<Group> = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const color = props.avatar_color || '#f7f8fa';\n\n    return (\n            <Card style={{backgroundColor:\"#f7f8fa\" , width:\"65%\" ,marginTop:10} } >\n                <Meta\n                    avatar={<Avatar style={{ backgroundColor: color, width: 100, height: 100 }} />}\n                    title={props.name}\n                    description={(props.closed ? 'Закрытая' : 'Открытая') + ' группа'}\n                />\n                <p>{props.members_count}  подписчиков</p>\n                {props.friends &&  <Button type=\"link\" onClick={ () => setIsOpen(prev => !prev) }> {props.friends?.length} друзей</Button>}\n                <ul  >{ isOpen && props.friends && props.friends.map((friend, index) => <Friend key={index} {...friend} />)}</ul>\n            </Card>\n    );\n}\n\n\nexport default GroupCard;"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AACpC,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAASC,IAAI,EAAEC,MAAM,EAAEC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAM;EAAEC;AAAK,CAAC,GAAGL,IAAI;AAErB,MAAMM,SAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMc,KAAK,GAAGL,KAAK,CAACM,YAAY,IAAI,SAAS;EAE7C,oBACQT,OAAA,CAACJ,IAAI;IAACc,KAAK,EAAE;MAACC,eAAe,EAAC,SAAS;MAAGC,KAAK,EAAC,KAAK;MAAEC,SAAS,EAAC;IAAE,CAAG;IAAAC,QAAA,gBAClEd,OAAA,CAACC,IAAI;MACDc,MAAM,eAAEf,OAAA,CAACH,MAAM;QAACa,KAAK,EAAE;UAAEC,eAAe,EAAEH,KAAK;UAAEI,KAAK,EAAE,GAAG;UAAEI,MAAM,EAAE;QAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAC/EC,KAAK,EAAElB,KAAK,CAACmB,IAAK;MAClBC,WAAW,EAAE,CAACpB,KAAK,CAACqB,MAAM,GAAG,UAAU,GAAG,UAAU,IAAI;IAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACFpB,OAAA;MAAAc,QAAA,GAAIX,KAAK,CAACsB,aAAa,EAAC,sEAAa;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACxCjB,KAAK,CAACuB,OAAO,iBAAK1B,OAAA,CAACF,MAAM;MAAC6B,IAAI,EAAC,MAAM;MAACC,OAAO,EAAGA,CAAA,KAAMrB,SAAS,CAACsB,IAAI,IAAI,CAACA,IAAI,CAAG;MAAAf,QAAA,GAAC,GAAC,GAAAT,cAAA,GAACF,KAAK,CAACuB,OAAO,cAAArB,cAAA,uBAAbA,cAAA,CAAeyB,MAAM,EAAC,uCAAO;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1HpB,OAAA;MAAAc,QAAA,EAAQR,MAAM,IAAIH,KAAK,CAACuB,OAAO,IAAIvB,KAAK,CAACuB,OAAO,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAAKjC,OAAA,CAACL,MAAM;QAAA,GAAiBqC;MAAM,GAAjBC,KAAK;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/G,CAAC;AAEnB,CAAC;AAAAhB,EAAA,CAhBKF,SAAoB;AAAAgC,EAAA,GAApBhC,SAAoB;AAmB1B,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}