{"ast":null,"code":"var _jsxFileName = \"/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Card, Space, Avatar } from \"antd\";\nimport Friend from \"./Friend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\n\n// const GroupCard:FC = (props) => {\n//     console.log(props)\n//     return (\n//         <div>\n//             <Card avatar=''></Card>\n//             {/* {props} */}\n//         </div>\n//     )\n\n// }\n\nconst GroupCard = props => {\n  _s();\n  var _props$friends;\n  const [isOpen, setIsOpen] = useState(false);\n  //   console.log(props.name);\n  const color = props.avatar_color || '';\n  //   let subscribes='подписчиков'\n  //   switch(props.members_count%10){\n  //     case 1: \n  //         subscribes='подписчик';\n  //     break;\n  //     case 2 || 3 || 4:\n  //         subscribes='подписчика'\n  //     break\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Space, {\n    direction: \"vertical\",\n    size: 16,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: color,\n            width: 100,\n            height: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this),\n        title: props.name,\n        description: (props.closed ? 'Закрытая' : 'Открытая') + ' группа'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.members_count, \"  \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0447\\u0438\\u043A\\u043E\\u0432\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), props.friends && /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsOpen(true),\n        children: [\" \", (_props$friends = props.friends) === null || _props$friends === void 0 ? void 0 : _props$friends.length, \" \\u0434\\u0440\\u0443\\u0437\\u0435\\u0439\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isOpen && props.friends && props.friends.map((friend, index) => /*#__PURE__*/_jsxDEV(Friend, {\n          ...friend\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 90\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupCard, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = GroupCard;\nexport default GroupCard;\nvar _c;\n$RefreshReg$(_c, \"GroupCard\");","map":{"version":3,"names":["useState","Card","Space","Avatar","Friend","jsxDEV","_jsxDEV","Meta","GroupCard","props","_s","_props$friends","isOpen","setIsOpen","color","avatar_color","direction","size","children","avatar","style","backgroundColor","width","height","fileName","_jsxFileName","lineNumber","columnNumber","title","name","description","closed","members_count","friends","onClick","length","map","friend","index","_c","$RefreshReg$"],"sources":["/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx"],"sourcesContent":["import { FC, useState } from \"react\"\nimport { Card, Space, Avatar } from \"antd\"\nimport Friend from \"./Friend\";\nconst { Meta } = Card;\n\n\n// const GroupCard:FC = (props) => {\n//     console.log(props)\n//     return (\n//         <div>\n//             <Card avatar=''></Card>\n//             {/* {props} */}\n//         </div>\n//     )\n\n// }\ninterface GroupProps {\n    \"id\": number,\n    \"name\": string,\n    \"closed\": boolean,\n    \"avatar_color\"?: string,\n    \"members_count\": number,\n    \"friends\"?: User[]\n}\ninterface User {\n    \"first_name\": string,\n    \"last_name\": string\n}\n\nconst GroupCard: React.FC<GroupProps> = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    //   console.log(props.name);\n    const color = props.avatar_color || '';\n    //   let subscribes='подписчиков'\n    //   switch(props.members_count%10){\n    //     case 1: \n    //         subscribes='подписчик';\n    //     break;\n    //     case 2 || 3 || 4:\n    //         subscribes='подписчика'\n    //     break\n    //   }\n\n    return (\n\n        <Space direction=\"vertical\" size={16}>\n            <Card>\n                {/*    style={{backgroundColor:\"lightgrey\"} } > */}\n                {/* extra={<a href=\"#\">More</a>} style={{ width: 300 }} > */}\n                <Meta\n                    avatar={<Avatar style={{ backgroundColor: color, width: 100, height: 100 }} />}\n                    title={props.name}\n                    description={(props.closed ? 'Закрытая' : 'Открытая') + ' группа'}\n                />\n                <p>{props.members_count}  подписчиков</p>\n                {props.friends && <p onClick={() => setIsOpen(true)}> {props.friends?.length} друзей</p>}\n                <div  >{ isOpen && props.friends && props.friends.map((friend, index) => <Friend key={index} {...friend} />)}</div>\n                {/* <p>{friend.last_name}</p>)}</div> */}\n               \n                {/* <div> {props.friends} </div> */}\n                {/* {props.friends &&  */}\n\n                {/* <p>{props.name}</p>  */}\n            </Card>\n        </Space>\n    );\n}\n\n\nexport default GroupCard;"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AACpC,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAM;EAAEC;AAAK,CAAC,GAAGN,IAAI;;AAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAcA,MAAMO,SAA+B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAAA,IAAAC,cAAA;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C;EACA,MAAMc,KAAK,GAAGL,KAAK,CAACM,YAAY,IAAI,EAAE;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAEIT,OAAA,CAACJ,KAAK;IAACc,SAAS,EAAC,UAAU;IAACC,IAAI,EAAE,EAAG;IAAAC,QAAA,eACjCZ,OAAA,CAACL,IAAI;MAAAiB,QAAA,gBAGDZ,OAAA,CAACC,IAAI;QACDY,MAAM,eAAEb,OAAA,CAACH,MAAM;UAACiB,KAAK,EAAE;YAAEC,eAAe,EAAEP,KAAK;YAAEQ,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAC/EC,KAAK,EAAEnB,KAAK,CAACoB,IAAK;QAClBC,WAAW,EAAE,CAACrB,KAAK,CAACsB,MAAM,GAAG,UAAU,GAAG,UAAU,IAAI;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACFrB,OAAA;QAAAY,QAAA,GAAIT,KAAK,CAACuB,aAAa,EAAC,sEAAa;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACxClB,KAAK,CAACwB,OAAO,iBAAI3B,OAAA;QAAG4B,OAAO,EAAEA,CAAA,KAAMrB,SAAS,CAAC,IAAI,CAAE;QAAAK,QAAA,GAAC,GAAC,GAAAP,cAAA,GAACF,KAAK,CAACwB,OAAO,cAAAtB,cAAA,uBAAbA,cAAA,CAAewB,MAAM,EAAC,uCAAO;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxFrB,OAAA;QAAAY,QAAA,EAASN,MAAM,IAAIH,KAAK,CAACwB,OAAO,IAAIxB,KAAK,CAACwB,OAAO,CAACG,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAAKhC,OAAA,CAACF,MAAM;UAAA,GAAiBiC;QAAM,GAAjBC,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOjH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEhB,CAAC;AAAAjB,EAAA,CArCKF,SAA+B;AAAA+B,EAAA,GAA/B/B,SAA+B;AAwCrC,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}