{"ast":null,"code":"var _jsxFileName = \"/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx\";\nimport { Card, Space, Avatar } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\n\n// const GroupCard:FC = (props) => {\n//     console.log(props)\n//     return (\n//         <div>\n//             <Card avatar=''></Card>\n//             {/* {props} */}\n//         </div>\n//     )\n\n// }\n\nconst GroupCard = props => {\n  var _props$friends;\n  console.log(props.name);\n  const color = props.avatar_color || '';\n  //   let subscribes='подписчиков'\n  //   switch(props.members_count%10){\n  //     case 1: \n  //         subscribes='подписчик';\n  //     break;\n  //     case 2 || 3 || 4:\n  //         subscribes='подписчика'\n  //     break\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Space, {\n    direction: \"vertical\",\n    size: 16,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: \"lightgrey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            backgroundColor: color,\n            width: 100,\n            height: 100\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this),\n        title: props.name,\n        description: (props.closed ? 'Закрытая' : 'Открытая') + ' группа'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.members_count, \"  \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u0447\\u0438\\u043A\\u043E\\u0432\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }, this), props.friends && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", (_props$friends = props.friends) === null || _props$friends === void 0 ? void 0 : _props$friends.length, \" \\u0434\\u0440\\u0443\\u0437\\u0435\\u0439\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = GroupCard;\nexport default GroupCard;\nvar _c;\n$RefreshReg$(_c, \"GroupCard\");","map":{"version":3,"names":["Card","Space","Avatar","jsxDEV","_jsxDEV","Meta","GroupCard","props","_props$friends","console","log","name","color","avatar_color","direction","size","children","style","backgroundColor","avatar","width","height","fileName","_jsxFileName","lineNumber","columnNumber","title","description","closed","members_count","friends","length","_c","$RefreshReg$"],"sources":["/Users/adel/Desktop/work/react/vk/vk_test2/src/components/GroupCard.tsx"],"sourcesContent":["import { FC } from \"react\"\nimport { Card, Space, Avatar } from \"antd\"\nconst { Meta } = Card;\n\n// const GroupCard:FC = (props) => {\n//     console.log(props)\n//     return (\n//         <div>\n//             <Card avatar=''></Card>\n//             {/* {props} */}\n//         </div>\n//     )\n\n// }\n  interface GroupProps {\n    \"id\": number,\n    \"name\": string,\n    \"closed\": boolean,\n    \"avatar_color\"?: string,\n    \"members_count\": number,\n    \"friends\"?: User[]\n  }\n    interface User {\n    \"first_name\": string,\n    \"last_name\": string\n  }\n\nconst GroupCard: React.FC<GroupProps> = (props) => {\n\n  console.log(props.name);\n  const color=props.avatar_color || '';\n//   let subscribes='подписчиков'\n//   switch(props.members_count%10){\n//     case 1: \n//         subscribes='подписчик';\n//     break;\n//     case 2 || 3 || 4:\n//         subscribes='подписчика'\n//     break\n//   }\n\nreturn (\n    \n    <Space direction=\"vertical\" size={16}>\n      <Card style={{backgroundColor:\"lightgrey\"} } >\n      {/* extra={<a href=\"#\">More</a>} style={{ width: 300 }} > */}\n      <Meta\n          avatar={<Avatar style={{ backgroundColor:color, width:100, height:100 }}/>}\n          title={props.name}\n          description={(props.closed ? 'Закрытая': 'Открытая') + ' группа'} \n        />\n        {/* <p> </p> */}\n<p>{props.members_count }  подписчиков</p>\n{props.friends && <p> {props.friends?.length} друзей</p>}\n        {/* <div> {props.friends} </div> */}\n        {/* {props.friends &&  */}\n\n         {/* <p>{props.name}</p>  */}\n      </Card>\n    </Space>\n  );\n    }\n  \n\nexport default GroupCard;"],"mappings":";AACA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAM;EAAEC;AAAK,CAAC,GAAGL,IAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAcA,MAAMM,SAA+B,GAAIC,KAAK,IAAK;EAAA,IAAAC,cAAA;EAEjDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,IAAI,CAAC;EACvB,MAAMC,KAAK,GAACL,KAAK,CAACM,YAAY,IAAI,EAAE;EACtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAEIT,OAAA,CAACH,KAAK;IAACa,SAAS,EAAC,UAAU;IAACC,IAAI,EAAE,EAAG;IAAAC,QAAA,eACnCZ,OAAA,CAACJ,IAAI;MAACiB,KAAK,EAAE;QAACC,eAAe,EAAC;MAAW,CAAG;MAAAF,QAAA,gBAE5CZ,OAAA,CAACC,IAAI;QACDc,MAAM,eAAEf,OAAA,CAACF,MAAM;UAACe,KAAK,EAAE;YAAEC,eAAe,EAACN,KAAK;YAAEQ,KAAK,EAAC,GAAG;YAAEC,MAAM,EAAC;UAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAE;QAC3EC,KAAK,EAAEnB,KAAK,CAACI,IAAK;QAClBgB,WAAW,EAAE,CAACpB,KAAK,CAACqB,MAAM,GAAG,UAAU,GAAE,UAAU,IAAI;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eAEVrB,OAAA;QAAAY,QAAA,GAAIT,KAAK,CAACsB,aAAa,EAAE,sEAAa;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACzClB,KAAK,CAACuB,OAAO,iBAAI1B,OAAA;QAAAY,QAAA,GAAG,GAAC,GAAAR,cAAA,GAACD,KAAK,CAACuB,OAAO,cAAAtB,cAAA,uBAAbA,cAAA,CAAeuB,MAAM,EAAC,uCAAO;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAAO,EAAA,GAlCC1B,SAA+B;AAqCrC,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}